
services:
  invoice_backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: invoice_backend
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/${POSTGRES_DB}
      DATABASE_SQLALCHEMY_URL: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/${POSTGRES_DB}
      APP_DEBUG: ${APP_DEBUG}
      DB_HOST: ${POSTGRES_HOST}
      PGUSER: ${POSTGRES_USER}
      PGDATABASE: ${POSTGRES_DB}
    depends_on:
      invoice_postgres_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BACKEND_PORT}/health"]
      interval: 60s
      timeout: 5s
      retries: 2
      start_period: 20s
    networks:
      - invoice_network

  invoice_frontend:
    build: ./frontend
    container_name: invoice_frontend
    ports:
      - "${FRONTEND_EXTERNAL_PORT}:80"
    environment:
      BACKEND_URL: http://${BACKEND_HOST}:${BACKEND_PORT}
    depends_on:
      invoice_backend:
        condition: service_healthy
    networks:
      - invoice_network

  invoice_postgres_db:
    image: postgres:13-alpine
    container_name: invoice_postgres_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - invoice_network
  
  invoice_pgadmin:
    image: dpage/pgadmin4
    container_name: invoice_pgadmin
    ports:
      - "${PGADMIN_HOST_PORT}:${PGADMIN_PORT}"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_PORT: ${PGADMIN_PORT}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      invoice_postgres_db:
        condition: service_healthy
    networks:
      - invoice_network

networks:
  invoice_network:
    driver: bridge

volumes:
  pgadmin-data:
    